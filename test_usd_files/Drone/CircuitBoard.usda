#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (0, 0, 50000)
                double radius = 500
            }
            dictionary Perspective = {
                double3 position = (274.5920538815626, 107.26815986140817, 186.2982011907806)
                double3 target = (-7.205353854788143, 5.962305336142691, 0.3444930118574234)
            }
            dictionary Right = {
                double3 position = (-50000, 0, 0)
                double radius = 500
            }
            dictionary Top = {
                double3 position = (0, 50000, 0)
                double radius = 500
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
        string creator = "NVIDIA Omniverse Maya Native Connector: 207.0.0-rc.5"
        dictionary navmeshSettings = {
            double agentHeight = 180
            double agentRadius = 20
            bool excludeRigidBodies = 1
            uint64 ver = 1
            double voxelCeiling = 460
        }
        dictionary omni_layer = {
            string authoring_layer = "./DroneCircuitBoard_reduced.usd"
            dictionary locked = {
            }
            dictionary muteness = {
            }
        }
        dictionary renderSettings = {
            float3 "rtx:debugView:pixelDebug:textColor" = (0, 1e18, 0)
            float3 "rtx:fog:fogColor" = (0.75, 0.75, 0.75)
            float3 "rtx:index:regionOfInterestMax" = (0, 0, 0)
            float3 "rtx:index:regionOfInterestMin" = (0, 0, 0)
            float3 "rtx:iray:environment_dome_ground_position" = (0, 0, 0)
            float3 "rtx:iray:environment_dome_ground_reflectivity" = (0, 0, 0)
            float3 "rtx:iray:environment_dome_rotation_axis" = (3.4028235e38, 3.4028235e38, 3.4028235e38)
            float3 "rtx:post:backgroundZeroAlpha:backgroundDefaultColor" = (0, 0, 0)
            float3 "rtx:post:colorcorr:contrast" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gain" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gamma" = (1, 1, 1)
            float3 "rtx:post:colorcorr:offset" = (0, 0, 0)
            float3 "rtx:post:colorcorr:saturation" = (1, 1, 1)
            float3 "rtx:post:colorgrad:blackpoint" = (0, 0, 0)
            float3 "rtx:post:colorgrad:contrast" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gain" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gamma" = (1, 1, 1)
            float3 "rtx:post:colorgrad:lift" = (0, 0, 0)
            float3 "rtx:post:colorgrad:multiply" = (1, 1, 1)
            float3 "rtx:post:colorgrad:offset" = (0, 0, 0)
            float3 "rtx:post:colorgrad:whitepoint" = (1, 1, 1)
            float3 "rtx:post:lensDistortion:lensFocalLengthArray" = (10, 30, 50)
            float3 "rtx:post:lensFlares:anisoFlareFalloffX" = (450, 475, 500)
            float3 "rtx:post:lensFlares:anisoFlareFalloffY" = (10, 10, 10)
            float3 "rtx:post:lensFlares:cutoffPoint" = (2, 2, 2)
            float3 "rtx:post:lensFlares:haloFlareFalloff" = (10, 10, 10)
            float3 "rtx:post:lensFlares:haloFlareRadius" = (75, 75, 75)
            float3 "rtx:post:lensFlares:isotropicFlareFalloff" = (50, 50, 50)
            float3 "rtx:post:tonemap:whitepoint" = (1, 1, 1)
            float3 "rtx:raytracing:inscattering:singleScatteringAlbedo" = (0.9, 0.9, 0.9)
            float3 "rtx:raytracing:inscattering:transmittanceColor" = (0.5, 0.5, 0.5)
            float3 "rtx:sceneDb:ambientLightColor" = (0.1, 0.1, 0.1)
        }
    }
    defaultPrim = "CircuitBoard"
    framesPerSecond = 24
    metersPerUnit = 0.01
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "CircuitBoard"
{
    def Xform "CircuitBoard"
    {
        double3 xformOp:rotateXYZ = (0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        def Mesh "CircuitBoard_Reduced" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-13.191284, 50.83004, -9.847671), (9.289315, 51.455566, 10.702462)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 3, 3, 3, 5, 5, 4, 4, 5, 5, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [4, 6, 11, 10, 5, 4, 17, 16, 6, 5, 8, 7, 7, 9, 15, 14, 9, 8, 19, 18, 10, 12, 21, 20, 12, 11, 14, 13, 13, 15, 23, 22, 24, 26, 82, 81, 25, 24, 30, 29, 26, 25, 32, 31, 27, 30, 121, 120, 28, 27, 93, 92, 29, 28, 36, 35, 31, 33, 58, 59, 33, 32, 35, 34, 34, 37, 100, 99, 37, 36, 97, 96, 38, 40, 73, 72, 39, 38, 42, 41, 40, 39, 46, 45, 41, 44, 50, 49, 43, 42, 106, 105, 44, 43, 111, 110, 45, 47, 69, 68, 47, 46, 49, 48, 48, 51, 116, 117, 51, 50, 115, 114, 52, 54, 91, 90, 53, 52, 84, 83, 54, 53, 56, 55, 55, 57, 95, 94, 57, 56, 61, 60, 59, 58, 99, 98, 60, 61, 89, 88, 62, 64, 109, 108, 63, 62, 74, 75, 64, 63, 66, 65, 65, 67, 113, 112, 67, 66, 71, 70, 72, 73, 107, 106, 75, 74, 77, 76, 76, 80, 125, 124, 78, 77, 108, 111, 79, 78, 105, 104, 80, 79, 86, 85, 85, 89, 127, 126, 87, 86, 101, 100, 88, 87, 96, 95, 90, 93, 122, 123, 92, 91, 94, 97, 98, 102, 129, 128, 102, 101, 104, 103, 103, 107, 131, 130, 110, 109, 112, 115, 114, 113, 119, 118, 117, 116, 118, 119, 120, 121, 123, 122, 132, 134, 139, 138, 133, 132, 145, 144, 134, 133, 136, 135, 135, 137, 143, 142, 137, 136, 147, 146, 138, 140, 149, 148, 140, 139, 142, 141, 141, 143, 151, 150, 152, 154, 159, 158, 153, 152, 165, 164, 154, 153, 156, 155, 155, 157, 163, 162, 157, 156, 167, 166, 158, 160, 169, 168, 160, 159, 162, 161, 161, 163, 171, 170, 172, 174, 179, 178, 173, 172, 185, 184, 174, 173, 176, 175, 175, 177, 183, 182, 177, 176, 187, 186, 178, 180, 189, 188, 180, 179, 182, 181, 181, 183, 191, 190, 192, 194, 199, 198, 193, 192, 205, 204, 194, 193, 196, 195, 195, 197, 203, 202, 197, 196, 207, 206, 198, 200, 209, 208, 200, 199, 202, 201, 201, 203, 211, 210, 5, 16, 19, 8, 6, 7, 14, 11, 12, 13, 22, 21, 9, 18, 23, 15, 10, 20, 17, 4, 25, 29, 35, 32, 33, 34, 99, 58, 39, 41, 49, 46, 24, 81, 121, 30, 53, 83, 61, 56, 59, 82, 26, 31, 45, 68, 73, 40, 47, 48, 117, 69, 75, 71, 66, 63, 72, 106, 42, 38, 94, 91, 54, 55, 88, 95, 57, 60, 108, 77, 74, 62, 112, 109, 64, 65, 119, 113, 67, 70, 90, 123, 84, 52, 104, 101, 86, 79, 100, 37, 96, 87, 36, 28, 92, 97, 27, 120, 122, 93, 121, 117, 119, 123, 116, 51, 114, 118, 50, 44, 110, 115, 43, 105, 78, 111, 75, 76, 124, 0, 89, 61, 1, 127, 59, 98, 128, 2, 107, 73, 3, 131, 102, 103, 130, 129, 80, 85, 126, 125, 133, 144, 147, 136, 134, 135, 142, 139, 140, 141, 150, 149, 137, 146, 151, 143, 138, 148, 145, 132, 153, 164, 167, 156, 154, 155, 162, 159, 160, 161, 170, 169, 157, 166, 171, 163, 158, 168, 165, 152, 173, 184, 187, 176, 174, 175, 182, 179, 180, 181, 190, 189, 177, 186, 191, 183, 178, 188, 185, 172, 193, 204, 207, 196, 194, 195, 202, 199, 200, 201, 210, 209, 197, 206, 211, 203, 198, 208, 205, 192, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203]
            rel material:binding = </World/CircuitBoard_Reduced/CircuitBoard_Reduced/Looks/CircuitBoard> (
                bindMaterialAs = "strongerThanDescendants"
            )
            point3f[] points = [(9.289315, 50.83004, -5.41287), (9.289315, 50.83004, -1.8800983), (-13.191284, 50.83004, -1.8800983), (-13.191284, 50.83004, -5.41287), (-5.5551867, 51.407856, 2.8029878), (-5.513999, 51.407856, 2.8441756), (-5.513999, 51.449043, 2.8029878), (-2.4240022, 51.449043, 2.8029878), (-2.4240022, 51.407856, 2.8441756), (-2.3828144, 51.407856, 2.8029878), (-5.5551867, 51.407856, -1.1613084), (-5.513999, 51.449043, -1.1613084), (-5.513999, 51.407856, -1.2024963), (-2.4240022, 51.407856, -1.2024963), (-2.4240022, 51.449043, -1.1613084), (-2.3828144, 51.407856, -1.1613084), (-5.513999, 51.18026, 2.8441756), (-5.5551867, 51.18026, 2.8029878), (-2.3828144, 51.18026, 2.8029878), (-2.4240022, 51.18026, 2.8441756), (-5.5551867, 51.18026, -1.1613084), (-5.513999, 51.18026, -1.2024963), (-2.4240022, 51.18026, -1.2024963), (-2.3828144, 51.18026, -1.1613084), (-13.150096, 50.83004, 10.661274), (-13.150096, 50.871227, 10.702462), (-13.191284, 50.871227, 10.661274), (-11.124066, 50.83004, 10.661274), (-11.124066, 50.871227, 10.702462), (-11.182315, 50.871227, 10.702462), (-11.182315, 50.83004, 10.661274), (-13.191284, 51.273464, 10.661274), (-13.150096, 51.273464, 10.702462), (-13.150096, 51.31465, 10.661274), (-11.182315, 51.31465, 10.661274), (-11.182315, 51.273464, 10.702462), (-11.124066, 51.273464, 10.702462), (-11.124066, 51.31465, 10.661274), (-13.150096, 51.31465, -9.806482), (-13.150096, 51.273464, -9.847671), (-13.191284, 51.273464, -9.806482), (-11.182315, 51.273464, -9.847671), (-11.182315, 51.31465, -9.806482), (-11.124066, 51.31465, -9.806482), (-11.124066, 51.273464, -9.847671), (-13.191284, 50.871227, -9.806482), (-13.150096, 50.871227, -9.847671), (-13.150096, 50.83004, -9.806482), (-11.182315, 50.83004, -9.806482), (-11.182315, 50.871227, -9.847671), (-11.124066, 50.871227, -9.847671), (-11.124066, 50.83004, -9.806482), (9.248127, 50.83004, 10.661274), (9.289315, 50.871227, 10.661274), (9.248127, 50.871227, 10.702462), (9.248127, 51.273464, 10.702462), (9.289315, 51.273464, 10.661274), (9.248127, 51.31465, 10.661274), (-13.150096, 51.31465, -1.8389105), (-13.191284, 51.273464, -1.8800983), (9.248127, 51.31465, -1.8389105), (9.289315, 51.273464, -1.8800983), (9.248127, 51.31465, -9.806482), (9.289315, 51.273464, -9.806482), (9.248127, 51.273464, -9.847671), (9.248127, 50.871227, -9.847671), (9.289315, 50.871227, -9.806482), (9.248127, 50.83004, -9.806482), (-13.191284, 50.871227, -5.4128695), (-13.150096, 50.83004, -5.4128695), (9.248127, 50.83004, -5.4128695), (9.289315, 50.871227, -5.4128695), (-13.150096, 51.31465, -5.4540577), (-13.191284, 51.273464, -5.41287), (9.248127, 51.31465, -5.4540577), (9.289315, 51.273464, -5.41287), (7.460523, 51.27499, -5.41287), (7.449019, 51.31465, -5.452688), (7.3895326, 51.31465, -5.4442005), (7.3792934, 51.31465, -5.383476), (7.420863, 51.27499, -5.37321), (-13.150096, 50.83004, -1.8800983), (-13.191284, 50.871227, -1.8800983), (9.289315, 50.871227, -1.8800983), (9.248127, 50.83004, -1.8800983), (7.420863, 51.27499, -1.9197586), (7.381045, 51.31465, -1.9082541), (7.3895326, 51.31465, -1.8487675), (7.4502573, 51.31465, -1.8385288), (7.460523, 51.27499, -1.8800983), (7.449994, 50.83004, 10.661274), (7.449994, 50.871227, 10.702462), (7.3917456, 50.871227, 10.702462), (7.3917456, 50.83004, 10.661274), (7.449994, 51.273464, 10.702462), (7.449994, 51.31465, 10.661274), (7.3917456, 51.31465, 10.661274), (7.3917456, 51.273464, 10.702462), (-11.192854, 51.27499, -1.8800983), (-11.18135, 51.31465, -1.8402799), (-11.121862, 51.31465, -1.8487675), (-11.111624, 51.31465, -1.9094925), (-11.153193, 51.27499, -1.9197586), (-11.153193, 51.27499, -5.37321), (-11.113375, 51.31465, -5.384714), (-11.121862, 51.31465, -5.4442005), (-11.182588, 51.31465, -5.4544396), (-11.192854, 51.27499, -5.41287), (7.449994, 51.31465, -9.806482), (7.449994, 51.273464, -9.847671), (7.3917456, 51.273464, -9.847671), (7.3917456, 51.31465, -9.806482), (7.449994, 50.871227, -9.847671), (7.449994, 50.83004, -9.806482), (7.3917456, 50.83004, -9.806482), (7.3917456, 50.871227, -9.847671), (-11.124066, 50.83004, -5.4419937), (-11.182315, 50.83004, -5.383745), (7.3917456, 50.83004, -5.4419937), (7.449994, 50.83004, -5.383745), (-11.124066, 50.83004, -1.8509741), (-11.182315, 50.83004, -1.9092226), (7.3917456, 50.83004, -1.8509741), (7.449994, 50.83004, -1.9092226), (7.462051, 50.83004, -5.41287), (7.420863, 50.83004, -5.371682), (7.420863, 50.83004, -1.9212862), (7.462051, 50.83004, -1.8800983), (-11.194382, 50.83004, -1.8800983), (-11.153193, 50.83004, -1.9212862), (-11.153193, 50.83004, -5.371682), (-11.194382, 50.83004, -5.41287), (-0.612121, 51.407856, 2.8745236), (-0.5709331, 51.407856, 2.9157114), (-0.5709331, 51.449043, 2.8745236), (1.2425821, 51.449043, 2.8745236), (1.2425821, 51.407856, 2.9157114), (1.28377, 51.407856, 2.8745236), (-0.612121, 51.407856, -0.9732256), (-0.5709331, 51.449043, -0.9732256), (-0.5709331, 51.407856, -1.0144135), (1.2425821, 51.407856, -1.0144135), (1.2425821, 51.449043, -0.9732256), (1.28377, 51.407856, -0.9732256), (-0.5709331, 51.18026, 2.9157114), (-0.612121, 51.18026, 2.8745236), (1.28377, 51.18026, 2.8745236), (1.2425821, 51.18026, 2.9157114), (-0.612121, 51.18026, -0.9732256), (-0.5709331, 51.18026, -1.0144135), (1.2425821, 51.18026, -1.0144135), (1.28377, 51.18026, -0.9732256), (-8.721554, 51.43069, 9.792794), (-8.682008, 51.416122, 9.835082), (-8.667169, 51.455566, 9.792794), (-7.5646257, 51.455566, 9.792794), (-7.549786, 51.416122, 9.835082), (-7.510241, 51.43069, 9.792794), (-8.721273, 51.431015, 6.703549), (-8.667169, 51.455566, 6.7040987), (-8.682008, 51.416122, 6.661811), (-7.549786, 51.416122, 6.661811), (-7.564198, 51.455566, 6.703549), (-7.5105205, 51.431015, 6.703549), (-8.889224, 51.173737, 9.835082), (-8.943667, 51.173737, 9.793894), (-7.288127, 51.173737, 9.793894), (-7.34257, 51.173737, 9.835082), (-8.943667, 51.173737, 6.7029986), (-8.889224, 51.173737, 6.661811), (-7.34257, 51.173737, 6.661811), (-7.288127, 51.173737, 6.7029986), (-9.774434, 51.407856, 2.6891656), (-9.815622, 51.407856, 2.7303534), (-9.774434, 51.449043, 2.7303534), (-9.774434, 51.449043, 4.9659967), (-9.815622, 51.407856, 4.9659967), (-9.774434, 51.407856, 5.0071845), (-6.6278863, 51.407856, 2.6891656), (-6.6278863, 51.449043, 2.7303534), (-6.5866985, 51.407856, 2.7303534), (-6.5866985, 51.407856, 4.9659967), (-6.6278863, 51.449043, 4.9659967), (-6.6278863, 51.407856, 5.0071845), (-9.815622, 51.18026, 2.7303534), (-9.774434, 51.18026, 2.6891656), (-9.774434, 51.18026, 5.0071845), (-9.815622, 51.18026, 4.9659967), (-6.6278863, 51.18026, 2.6891656), (-6.5866985, 51.18026, 2.7303534), (-6.5866985, 51.18026, 4.9659967), (-6.6278863, 51.18026, 5.0071845), (3.3204868, 51.407856, 7.3946548), (3.279299, 51.407856, 7.353467), (3.279299, 51.449043, 7.3946548), (0.5845032, 51.449043, 7.3946548), (0.5845032, 51.407856, 7.353467), (0.5433153, 51.407856, 7.3946548), (3.3204868, 51.407856, 9.95973), (3.279299, 51.449043, 9.95973), (3.279299, 51.407856, 10.000918), (0.5845032, 51.407856, 10.000918), (0.5845032, 51.449043, 9.95973), (0.5433153, 51.407856, 9.95973), (3.279299, 51.18026, 7.353467), (3.3204868, 51.18026, 7.3946548), (0.5433153, 51.18026, 7.3946548), (0.5845032, 51.18026, 7.353467), (3.3204868, 51.18026, 9.95973), (3.279299, 51.18026, 10.000918), (0.5845032, 51.18026, 10.000918), (0.5433153, 51.18026, 9.95973)]
            texCoord2f[] primvars:st = [(0.34159398, 0.42420498), (0.34159398, 0.424205), (0.34360215, 0.42219684), (0.4942581, 0.42219684), (0.49425814, 0.42219684), (0.34360212, 0.6194965), (0.34360212, 0.6174884), (0.49425814, 0.6174884), (0.49626628, 0.6174884), (0.49626628, 0.6174884), (0.9289245, 0.9610983), (0.9289245, 0.96280193), (0.41019037, 0.96280193), (0.95957637, 0.028795958), (0.95957637, 0.028479293), (0.9611781, 0.025386736), (0.9289245, 0.8772982), (0.92892444, 0.8797073), (0.4101904, 0.8798992), (0.8807884, 0.028795956), (0.16074823, 0.02879593), (0.8808763, 0.028479088), (0.030669034, 0.95978427), (0.030669034, 0.39632982), (0.95957637, 0.025386736), (0.88305366, 0.025386741), (0.8830536, 0.025070077), (0.11698427, 0.9616344), (0.890099, 0.9616344), (0.9594259, 0.025070071), (0.77251744, 0.025386747), (0.77426964, 0.025070084), (0.95957637, 0.028795958), (0.95957637, 0.028479293), (0.9611781, 0.025386736), (0.116985306, 0.040215928), (0.11455214, 0.04021621), (0.8807884, 0.028795956), (0.16074823, 0.02879593), (0.95942587, 0.028795958), (0.7725174, 0.028795952), (0.95957637, 0.025386736), (0.88305366, 0.025386741), (0.8830536, 0.025070077), (0.08063704, 0.877298), (0.08063703, 0.11145012), (0.08855754, 0.028795928), (0.15848307, 0.02879593), (0.95942587, 0.028795958), (0.42590392, 0.028795939), (0.95942587, 0.028479293), (0.9611781, 0.025386736), (0.08855754, 0.02507013), (0.9594259, 0.025386736), (0.42590392, 0.025386766), (0.42765608, 0.025070107), (0.032388818, 0.3981803), (0.11459245, 0.39811876), (0.114112094, 0.39632982), (0.9693308, 0.39632982), (0.9676111, 0.04021621), (0.967611, 0.03836572), (0.08870798, 0.02507013), (0.27386263, 0.025070118), (0.088707976, 0.025386788), (0.086955786, 0.02847927), (0.08855754, 0.02507013), (0.088707976, 0.028479272), (0.27561522, 0.02847926), (0.27561647, 0.028795935), (0.030669034, 0.23761079), (0.11454074, 0.23574306), (0.9693308, 0.23761079), (0.967611, 0.23576033), (0.89297086, 0.2376108), (0.086955786, 0.028491002), (0.086955786, 0.02507013), (0.8924905, 0.23582186), (0.89253116, 0.04021621), (0.89009905, 0.040216204), (0.89000666, 0.2362032), (0.1170763, 0.23620357), (0.89131486, 0.23939264), (0.8895792, 0.23893143), (0.8913149, 0.394548), (0.96117806, 0.028491024), (0.9426217, 0.028491024), (0.94190687, 0.025070073), (0.9611781, 0.025070071), (0.8896523, 0.39506483), (0.11707627, 0.39773747), (0.89000666, 0.39773744), (0.89009905, 0.9597839), (0.89253116, 0.9597839), (0.92892444, 0.11145012), (0.15848312, 0.028479274), (0.15848313, 0.025386786), (0.16074824, 0.025386782), (0.086955786, 0.028491002), (0.086955786, 0.02507013), (0.11576808, 0.39454803), (0.117504545, 0.3950091), (0.11743141, 0.23887563), (0.11576808, 0.23939256), (0.96117806, 0.028491026), (0.94416606, 0.028491024), (0.9435108, 0.025070073), (0.9611781, 0.025070071), (0.15848312, 0.028479274), (0.15848313, 0.025386786), (0.16074824, 0.025386782), (0.08234066, 0.10904085), (0.2640685, 0.10904871), (0.26549983, 0.87850267), (0.2628638, 0.8772988), (0.41019037, 0.87850267), (0.41019037, 0.11024549), (0.411395, 0.11145012), (0.55812705, 0.44191602), (0.55812705, 0.44191602), (0.5597031, 0.44010255), (0.6290978, 0.44010255), (0.62909776, 0.44010255), (0.5597031, 0.61314446), (0.5597031, 0.611331), (0.62909776, 0.611331), (0.6306738, 0.611331), (0.6306738, 0.611331), (0.21437454, 0.77967936), (0.21437454, 0.7796283), (0.21630244, 0.7777143), (0.27285916, 0.7777144), (0.27357796, 0.7777144), (0.21638767, 0.925169), (0.21609747, 0.92320395), (0.27389055, 0.9232295), (0.27559108, 0.9232295), (0.27559108, 0.9232551), (0.1728985, 0.70346713), (0.17289852, 0.70346713), (0.17115328, 0.7016298), (0.17115328, 0.6019008), (0.17115328, 0.6019008), (0.3079696, 0.7016298), (0.30622438, 0.7016298), (0.3062244, 0.6019008), (0.30622438, 0.6000635), (0.30622438, 0.6000635), (0.6025568, 0.8215373), (0.6025568, 0.8215373), (0.60435915, 0.81973875), (0.72228044, 0.81973875), (0.7222805, 0.81973875), (0.60435915, 0.9353473), (0.60435915, 0.9335487), (0.7222805, 0.9335487), (0.7240828, 0.9335487), (0.7240828, 0.9335487), (0.34360212, 0.42219684), (0.34360212, 0.42420495), (0.49425817, 0.42420495), (0.34360212, 0.6194965), (0.49425814, 0.6194965), (0.49425814, 0.6194965), (0.49626628, 0.42420498), (0.49626628, 0.42420498), (0.34159395, 0.6174884), (0.34159398, 0.6174884), (0.8830536, 0.028479291), (0.032388657, 0.95978427), (0.11455228, 0.95978427), (0.8830536, 0.028479291), (0.41019037, 0.9610985), (0.42590392, 0.02847928), (0.62223, 0.025386583), (0.62222993, 0.028479457), (0.088707976, 0.02847927), (0.088707976, 0.025386788), (0.95942587, 0.028479293), (0.7725174, 0.02847929), (0.9594259, 0.025386736), (0.08234063, 0.9610983), (0.08234062, 0.8797073), (0.2640685, 0.87969947), (0.2640685, 0.9610983), (0.27561522, 0.02538677), (0.03238883, 0.23576026), (0.032388818, 0.04021621), (0.08855754, 0.02847927), (0.08855754, 0.025386788), (0.8925422, 0.39819744), (0.967611, 0.9597839), (0.967611, 0.39818028), (0.08855754, 0.02847927), (0.08855754, 0.025386788), (0.082340665, 0.034666777), (0.2640685, 0.034666773), (0.92892444, 0.10904086), (0.41019037, 0.108865164), (0.41019037, 0.034666773), (0.9289245, 0.034666773), (0.11698431, 0.959784), (0.16074824, 0.02847927), (0.4113949, 0.8772982), (0.40898803, 0.8785026), (0.26527128, 0.11024549), (0.40875888, 0.11024549), (0.08234018, 0.8772988), (0.08234066, 0.11145012), (0.26286387, 0.11145012), (0.8808763, 0.028479088), (0.16074824, 0.02847927), (0.96117806, 0.028479293), (0.10551213, 0.028491002), (0.10622696, 0.02507013), (0.9611781, 0.025070071), (0.086955786, 0.02847927), (0.086955786, 0.02507013), (0.96117806, 0.028479293), (0.103967816, 0.028491002), (0.10462315, 0.025070129), (0.9611781, 0.025070071), (0.086955786, 0.02847927), (0.086955786, 0.02507013), (0.95136374, 0.028491024), (0.09677007, 0.028491002), (0.097148135, 0.025070129), (0.9509857, 0.025070071), (0.9513638, 0.028491024), (0.09677013, 0.028491002), (0.09714817, 0.025070129), (0.9509857, 0.025070071), (0.5597031, 0.44010255), (0.5597031, 0.44191596), (0.62909776, 0.44191596), (0.5597031, 0.61314446), (0.62909776, 0.61314446), (0.62909776, 0.61314446), (0.6306738, 0.44191602), (0.6306738, 0.44191602), (0.55812705, 0.611331), (0.55812705, 0.611331), (0.21638767, 0.7777144), (0.21609746, 0.7796794), (0.2738681, 0.7796794), (0.21710648, 0.925169), (0.2736632, 0.925169), (0.27357796, 0.925169), (0.27559108, 0.7796794), (0.27559108, 0.7796283), (0.21437456, 0.9232295), (0.21437454, 0.9232551), (0.17115328, 0.7016298), (0.17289852, 0.7016298), (0.17289852, 0.6019009), (0.3079696, 0.7016298), (0.3079696, 0.6019008), (0.3079696, 0.6019008), (0.1728985, 0.6000635), (0.17289852, 0.6000635), (0.3062244, 0.7034672), (0.30622438, 0.70346713), (0.60435915, 0.81973875), (0.60435915, 0.8215373), (0.7222805, 0.8215373), (0.60435915, 0.9353473), (0.7222805, 0.9353473), (0.7222805, 0.9353473), (0.7240828, 0.8215373), (0.7240828, 0.8215373), (0.6025568, 0.9335487), (0.6025568, 0.9335487), (0.96117806, 0.028479293), (0.881921, 0.028795956), (0.88305354, 0.028795956), (0.9595764, 0.025070071), (0.88087636, 0.025386944), (0.88192105, 0.025070077), (0.96117806, 0.028479293), (0.88305354, 0.028795956), (0.881921, 0.028795956), (0.9595764, 0.025070071), (0.88087636, 0.025386944), (0.88192105, 0.025070077), (0.96117806, 0.028479293), (0.9594259, 0.025070071), (0.086955786, 0.025386788), (0.088707976, 0.028795928), (0.89131486, 0.23761077), (0.89131486, 0.39632982), (0.89297086, 0.39632982), (0.15961565, 0.02879593), (0.15848313, 0.025070125), (0.15961567, 0.025070125), (0.11576809, 0.39632982), (0.11576809, 0.23761079), (0.114112094, 0.23761079), (0.89253116, 0.03836572), (0.8913151, 0.03836572), (0.15848313, 0.025070125), (0.15961567, 0.025070125)] (
                customData = {
                    dictionary Maya = {
                        token name = "map1"
                    }
                }
                interpolation = "faceVarying"
            )
            int[] primvars:st:indices = [0, 159, 6, 166, 2, 0, 1, 158, 159, 2, 3, 160, 160, 164, 8, 7, 164, 3, 4, 165, 166, 161, 5, 167, 161, 6, 7, 162, 162, 8, 9, 163, 10, 11, 12, 172, 14, 13, 274, 168, 272, 14, 24, 15, 16, 17, 18, 203, 21, 19, 20, 202, 168, 21, 276, 25, 22, 169, 56, 23, 275, 24, 25, 26, 170, 201, 90, 57, 201, 27, 28, 92, 29, 180, 30, 31, 33, 32, 279, 171, 278, 33, 41, 34, 171, 210, 282, 42, 35, 36, 71, 81, 210, 37, 38, 211, 178, 39, 40, 179, 281, 41, 42, 43, 182, 207, 114, 183, 207, 44, 45, 208, 46, 188, 95, 47, 50, 48, 49, 173, 284, 50, 53, 51, 189, 52, 292, 96, 285, 53, 54, 55, 23, 56, 57, 58, 192, 59, 290, 190, 60, 61, 297, 78, 64, 62, 63, 185, 286, 64, 67, 65, 194, 66, 299, 109, 287, 67, 68, 69, 186, 70, 296, 71, 72, 73, 77, 74, 213, 75, 76, 214, 80, 77, 78, 79, 83, 80, 81, 102, 82, 83, 89, 84, 85, 86, 87, 88, 91, 89, 101, 90, 190, 91, 92, 93, 197, 94, 117, 198, 202, 95, 96, 97, 219, 98, 99, 220, 100, 101, 102, 103, 104, 105, 106, 107, 211, 108, 109, 110, 208, 111, 112, 209, 113, 114, 209, 205, 203, 115, 116, 117, 118, 233, 124, 240, 120, 118, 119, 232, 233, 120, 121, 234, 234, 238, 126, 125, 238, 121, 122, 239, 240, 235, 123, 241, 235, 124, 125, 236, 236, 126, 127, 237, 128, 243, 134, 250, 130, 128, 129, 242, 243, 130, 131, 244, 244, 248, 136, 135, 248, 131, 132, 249, 250, 245, 133, 251, 245, 134, 135, 246, 246, 136, 137, 247, 138, 253, 144, 260, 140, 138, 139, 252, 253, 140, 141, 254, 254, 258, 146, 145, 258, 141, 142, 259, 260, 255, 143, 261, 255, 144, 145, 256, 256, 146, 147, 257, 148, 263, 154, 270, 150, 148, 149, 262, 263, 150, 151, 264, 264, 268, 156, 155, 268, 151, 152, 269, 270, 265, 153, 271, 265, 154, 155, 266, 266, 156, 157, 267, 2, 158, 4, 3, 159, 160, 7, 6, 161, 162, 163, 5, 164, 165, 9, 8, 166, 167, 1, 0, 14, 168, 25, 24, 169, 170, 57, 56, 33, 171, 42, 41, 10, 172, 18, 17, 50, 173, 54, 53, 174, 175, 176, 177, 178, 179, 30, 180, 181, 182, 183, 184, 185, 68, 67, 64, 186, 71, 36, 187, 96, 95, 188, 189, 190, 93, 191, 192, 78, 77, 73, 60, 109, 108, 193, 194, 112, 111, 195, 196, 197, 198, 199, 200, 102, 101, 89, 83, 90, 201, 92, 91, 276, 21, 202, 97, 16, 203, 117, 94, 204, 113, 205, 206, 114, 207, 208, 209, 282, 210, 211, 110, 35, 81, 80, 79, 212, 213, 214, 215, 86, 216, 217, 87, 218, 219, 220, 221, 105, 222, 223, 106, 224, 225, 226, 227, 228, 229, 230, 231, 120, 232, 122, 121, 233, 234, 125, 124, 235, 236, 237, 123, 238, 239, 127, 126, 240, 241, 119, 118, 130, 242, 132, 131, 243, 244, 135, 134, 245, 246, 247, 133, 248, 249, 137, 136, 250, 251, 129, 128, 140, 252, 142, 141, 253, 254, 145, 144, 255, 256, 257, 143, 258, 259, 147, 146, 260, 261, 139, 138, 150, 262, 152, 151, 263, 264, 155, 154, 265, 266, 267, 153, 268, 269, 157, 156, 270, 271, 149, 148, 0, 2, 159, 160, 3, 164, 166, 6, 161, 162, 7, 8, 13, 14, 272, 273, 21, 168, 274, 15, 24, 275, 26, 25, 276, 277, 32, 33, 278, 171, 279, 280, 210, 34, 41, 281, 43, 42, 282, 283, 48, 50, 284, 51, 53, 285, 62, 64, 286, 65, 67, 287, 74, 77, 80, 83, 288, 289, 89, 91, 190, 290, 47, 95, 202, 291, 96, 292, 293, 97, 58, 57, 90, 101, 294, 295, 102, 81, 71, 296, 78, 297, 298, 79, 109, 299, 300, 110, 118, 120, 233, 234, 121, 238, 240, 124, 235, 236, 125, 126, 128, 130, 243, 244, 131, 248, 250, 134, 245, 246, 135, 136, 138, 140, 253, 254, 141, 258, 260, 144, 255, 256, 145, 146, 148, 150, 263, 264, 151, 268, 270, 154, 265, 266, 155, 156]
            uniform token subsetFamily:materialBind:familyType = "partition"
            double3 xformOp:rotateXYZ = (0, 0, 0)
            double3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (0, -51.94017287616924, 0)
            double3 xformOp:translate:pivot = (-1.9509844779968262, 51.14280319213867, 0.4273958206176758)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

            def GeomSubset "back"
            {
                uniform token elementType = "face"
                uniform token familyName = "componentTag"
                int[] indices = [5, 7, 19, 20, 21, 23, 25, 38, 54, 63, 65, 71, 73, 79, 81, 87, 89, 92, 97, 108, 117, 127, 132, 137, 142, 153, 154, 155, 156, 168]
            }

            def GeomSubset "bottom"
            {
                uniform token elementType = "face"
                uniform token familyName = "componentTag"
                int[] indices = [8, 11, 26, 27, 49, 55, 56, 57, 98, 102, 109, 110, 114, 115, 116]
            }

            def GeomSubset "front"
            {
                uniform token elementType = "face"
                uniform token familyName = "componentTag"
                int[] indices = [1, 2, 4, 9, 10, 12, 13, 15, 28, 31, 50, 59, 60, 62, 67, 68, 70, 75, 76, 78, 83, 84, 86, 90, 95, 105, 113, 125, 130, 135, 140, 145, 146, 149, 150, 151, 152, 163, 164, 169, 170, 173, 174, 177, 178, 181, 182]
            }

            def GeomSubset "left"
            {
                uniform token elementType = "face"
                uniform token familyName = "componentTag"
                int[] indices = [18, 24, 94, 100, 101, 129, 134, 139, 144]
            }

            def GeomSubset "right"
            {
                uniform token elementType = "face"
                uniform token familyName = "componentTag"
                int[] indices = [29, 30, 32, 36, 37, 39, 93, 99, 103, 128, 133, 138, 143, 157, 158, 159, 160]
            }

            def GeomSubset "top"
            {
                uniform token elementType = "face"
                uniform token familyName = "componentTag"
                int[] indices = [0, 3, 6, 14, 16, 17, 22, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 58, 61, 64, 66, 69, 72, 74, 77, 80, 82, 85, 88, 91, 96, 104, 106, 107, 111, 112, 118, 119, 120, 121, 122, 123, 124, 126, 131, 136, 141, 147, 148, 161, 162, 165, 166, 167, 171, 172, 175, 176, 179, 180, 183, 184]
            }

            def GeomSubset "blinn1SG" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184]
                rel material:binding = </World/CircuitBoard_Reduced/CircuitBoard_Reduced/Looks/blinn1SG>
            }

            def Scope "Looks"
            {
                def Material "CircuitBoard"
                {
                    token outputs:mdl:displacement.connect = </World/CircuitBoard_Reduced/CircuitBoard_Reduced/Looks/CircuitBoard/Shader.outputs:out>
                    token outputs:mdl:surface.connect = </World/CircuitBoard_Reduced/CircuitBoard_Reduced/Looks/CircuitBoard/Shader.outputs:out>
                    token outputs:mdl:volume.connect = </World/CircuitBoard_Reduced/CircuitBoard_Reduced/Looks/CircuitBoard/Shader.outputs:out>

                    def Shader "Shader"
                    {
                        uniform token info:implementationSource = "sourceAsset"
                        uniform asset info:mdl:sourceAsset = @OmniPBR.mdl@
                        uniform token info:mdl:sourceAsset:subIdentifier = "OmniPBR"
                        asset inputs:diffuse_texture = @omniverse://nucleus.azurenucleus.co.uk/Projects/BAEDrone/Drone_Test/SubUSDs/Materials/blinn1SG/circuit_board_albedo.jpg@ (
                            colorSpace = "auto"
                            customData = {
                                asset default = @@
                            }
                            displayGroup = "Albedo"
                            displayName = "Albedo Map"
                            hidden = false
                            renderType = "texture_2d"
                        )
                        token outputs:out (
                            renderType = "material"
                        )
                    }
                }
            }
        }
    }
}

